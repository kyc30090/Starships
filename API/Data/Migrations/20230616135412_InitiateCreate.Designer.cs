// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230616135412_InitiateCreate")]
    partial class InitiateCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.7");

            modelBuilder.Entity("API.Entities.Starship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CargoCapacity")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "cargo_capacity");

                    b.Property<string>("Consumables")
                        .HasColumnType("TEXT");

                    b.Property<string>("CostInCredits")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "cost_in_credits");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Crew")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Edited")
                        .HasColumnType("TEXT");

                    b.Property<string>("Films")
                        .HasColumnType("TEXT");

                    b.Property<string>("HyperdriveRating")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "hyperdrive_rating");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Length")
                        .HasColumnType("TEXT");

                    b.Property<string>("MGLT")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "MGLT");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaxAtmospheringSpeed")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "max_atmosphering_speed");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Passengers")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pilots")
                        .HasColumnType("TEXT");

                    b.Property<string>("StarshipClass")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "starship_class");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Starships");
                });
#pragma warning restore 612, 618
        }
    }
}
